name: Build

on:
  push:
    branches: ['master']
    paths:
      - 'flake.lock'
      - 'home/programs/nvim/plugins.nix'

jobs:
  build-amd64-linux:
    runs-on: ubuntu-latest-amd64

    steps:
    - uses: actions/checkout@v3
    - name: Install Nix
      uses: https://github.com/DeterminateSystems/nix-installer-action@v4
      with:
        init: none
        planner: linux
        github-token: null
    - name: Setup Attic
      uses: https://github.com/ryanccn/attic-action@v0
      with:
        endpoint: ${{ secrets.ATTIC_ENDPOINT }}
        cache: ${{ secrets.ATTIC_CACHE }}
        token: ${{ secrets.ATTIC_TOKEN }}
    - run: nix build '.#nixosConfigurations.tanker.pkgs.attic-server'
    - run: nix build '.#nixosConfigurations.tanker.pkgs.attic-client'
    - run: nix build '.#nixosConfigurations.tanker.pkgs.deploy-rs'
    - run: nix build '.#nixosConfigurations.tanker.config.services.nginx.package'
    - run: nix build '.#nixosConfigurations.tanker.config.home-manager.users.daniel.programs.neovim.finalPackage'

  build-arm64-linux:
    runs-on: ubuntu-latest-arm64

    steps:
    - uses: actions/checkout@v3
    - name: Install Nix
      uses: https://github.com/DeterminateSystems/nix-installer-action@v4
      with:
        init: none
        planner: linux
        github-token: null
    - name: Setup Attic
      uses: https://github.com/ryanccn/attic-action@v0
      with:
        endpoint: ${{ secrets.ATTIC_ENDPOINT }}
        cache: ${{ secrets.ATTIC_CACHE }}
        token: ${{ secrets.ATTIC_TOKEN }}
    - run: nix build '.#nixosConfigurations.argon.pkgs.attic-client'
    - run: nix build '.#nixosConfigurations.argon.pkgs.deploy-rs'
    - run: nix build '.#nixosConfigurations.argon.config.services.nginx.package'
    - run: nix build '.#nixosConfigurations.argon.config.home-manager.users.daniel.programs.neovim.finalPackage'
